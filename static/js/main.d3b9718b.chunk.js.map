{"version":3,"sources":["resume.js","top.js","project1.js","project2.js","security_analysis.js","App.js","serviceWorker.js","index.js","images/my_profile_en.pdf","images/n10140981CAB230.pdf","images/ProjectReport.pdf","images/security_analysis.pdf"],"names":["resume","props","state","isopen","className","src","require","type","width","height","Component","top","Jumbotron","href","project1","project2","security_analysis","App","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","to","style","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.d3b9718b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nexport default class resume extends Component{\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            isopen: false,\n        };\n    }\n\n    render(){\n\n        return(\n            <div>\n                <div className=\"\">\n                <embed src={require('./images/my_profile_en.pdf')} type=\"application/pdf\" width=\"100%\" height=\"950px\" />\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport {\n    Jumbotron, Button\n  } from 'reactstrap';\n  import {\n    Link\n  } from 'react-router-dom'\nexport default class top extends Component{\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            isopen: false,\n        };\n    }\n\n    render(){\n\n        return(\n            <div className=\"App\">\n                <Jumbotron className=\"jb\">\n                    <h1 className=\"display-3\">ポートフォリオ</h1>\n                    <h3 className=\"my-1\">Souichi Kitai</h3>\n                    <div>\n                    {/* <img className=\"ore-picture\" src={require('./images/ore.jpg')}></img> */}\n\n                    <h4 className=\"my-1\">自己紹介</h4>\n                    <hr className=\"my-2\" />\n                    <li>22才</li>\n                    <li>コンピューターサイエンス専攻</li>\n                    <li>C#, ASP.NET Entity Framework, Javascript(React, jquery)</li>\n                    </div>        \n                    <hr className=\"my-2\" />        \n                    <div className=\"button_top\">\n                    {/* <p className=\"lead\">\n                    <Button color=\"primary\"><Link to={'/resume'} style={{color: 'black'}}>Look my resume</Link></Button>\n                    </p> */}\n                    </div>\n                    <h5>My email: souichi.kitai@gmail.com</h5>\n                    <h5>click here : <a href=\"https://www.facebook.com/profile.php?id=100005599240163\">facebook</a></h5>\n                </Jumbotron>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\n\nexport default class project1 extends Component{\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            isopen: false,\n        };\n    }\n\n    render(){\n\n        return(\n            <div>\n                <div className=\"\">\n                <embed src={require('./images/n10140981CAB230.pdf')} type=\"application/pdf\" width=\"100%\" height=\"950px\" />\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\n\nexport default class project2 extends Component{\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            isopen: false,\n        };\n    }\n\n    render(){\n\n        return(\n            <div>\n                <div className=\"\">\n                <embed src={require('./images/ProjectReport.pdf')} type=\"application/pdf\" width=\"100%\" height=\"950px\" />\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\n\nexport default class security_analysis extends Component{\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            isopen: false,\n        };\n    }\n\n    render(){\n\n        return(\n            <div>\n                <div className=\"\">\n                <embed src={require('./images/security_analysis.pdf')} type=\"application/pdf\" width=\"100%\" height=\"950px\" />\n                </div>\n            </div>\n        )\n    }\n}","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n  Jumbotron, Button\n} from 'reactstrap';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route, Switch,Link\n} from 'react-router-dom'\nimport resume from './resume';\nimport top from './top';\nimport project1 from './project1'\nimport project2 from './project2'\nimport security_analysis from './security_analysis'\nfunction App() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Router>\n    <div className=\"App\">\n      <div>\n      <Navbar className= \"Navbar\" color=\"light\" light expand=\"md\">\n        <NavbarBrand >\n        <Link to={'/portfolio'} style={{color: 'black'}}>Home</Link>\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"https://github.com/Souichikitai\">GitHub</NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Projects\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                <Link to={'/project1'} style={{color: 'black'}}>Stock Administrator</Link>\n                </DropdownItem>\n                <DropdownItem>\n                <Link to={'/project2'} style={{color: 'black'}}>Library Administrator</Link>\n                </DropdownItem>\n                <DropdownItem>\n                <Link to={'/security_analysis'} style={{color: 'black'}}>Security Analysis</Link>\n                </DropdownItem>\n                <DropdownItem>\n                Coming soon...\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* <NavbarText>Simple Text</NavbarText> */}\n        </Collapse>\n      </Navbar>\n      \n    </div>\n\n    </div>\n    <Switch>\n      {/* <Route exact path = \"/\" component={top} /> */}\n      <Route path=\"/portfolio\" component={top}/>\n      <Route path = \"/resume\" component={resume} />\n      <Route path = \"/project1\" component={project1} />\n      <Route path = \"/project2\" component={project2}/>\n      <Route path = \"/security_analysis\" component={security_analysis}/>\n    </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/my_profile_en.d383b192.pdf\";","module.exports = __webpack_public_path__ + \"static/media/n10140981CAB230.b7f040ce.pdf\";","module.exports = __webpack_public_path__ + \"static/media/ProjectReport.568b3d8f.pdf\";","module.exports = __webpack_public_path__ + \"static/media/security_analysis.092fe99c.pdf\";"],"sourceRoot":""}